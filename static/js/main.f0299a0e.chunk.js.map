{"version":3,"sources":["Style/Nav.module.css","redux/reducers/dialogs-reducer.js","basket/utils/object-helpers.js","redux/reducers/users-reducer.js","api/api.js","reportWebVitals.js","redux/reducers/profile-reducer.js","Components/content/Post/Post.js","assets/photo/ford.mustamg69.jpg","Components/content/UserInformation/UserStatusHook.js","Components/content/UserInformation/UserInformation.js","Components/content/Wall/Wall.js","Components/content/Profile.js","Components/content/ProfileContainer.js","assets/photo/user1.png","Components/header/Header.js","redux/reducers/auth-reducer.js","Components/header/HeaderContainer.js","Components/login/Login.js","redux/reducers/app-reducer.js","redux/reducers/nav-reducer.js","redux/redux-store.js","Components/nav/navFriends/NavFriends.js","Components/nav/Nav.js","Components/nav/NavContainer.js","hoc/withSuspense.js","App.js","index.js","Components/content/Profile.module.css","basket/FormsControls/FormsControls.module.css","assets/svg/spinning-circles.svg","basket/Preloader/Preloader.js","basket/validators/validators.js","basket/FormsControls/FormsControls.js","Components/content/UserInformation/user.info.module.css","Components/nav/navFriends/nav.friends.module.css","hoc/AuthRedirect.js","Components/content/Post/Post.module.css","Style/Header.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","dialogsArray","if","name","messagesArray","id","message","sendMessageCreator","text","type","textMessageNew","dialogsReducer","state","action","body","updateObjInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UN_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_SVG","TOGGLE_IS_FOLLOWING","users","pageSize","totalCount","currentPage","isFetching","followingProgress","followAC","userID","unfollowAC","setCurrentPageAC","toggleIsFetchingAC","toggleIsFollowingAC","isFollPr","getUsersThunkCreator","isCurentPage","dispatch","a","usersAPI","getUsers","data","followUnFlow","apiMethod","actionCreater","resultCode","unFollowThunkCreator","userDeleteFollow","bind","followThunkCreator","userPostFollow","usersReducer","followed","filter","instance","axios","withCredentials","headers","baseURL","get","then","response","post","delete","profileAPI","getUserProfile","getStatus","updateStatus","status1","put","status","headerAPI","authMe","loginAPI","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","postArray","likes","profile","setUserProfileAC","setStatus","profileReducer","newPost","textPostNew","Post","props","className","pm","item","img","src","like","UserStatusHook","useState","editMode","setEditMode","useEffect","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","UserInformation","React","memo","uim","userItem","userImage","photos","large","logoMustang","fordMustang","logoUser","userText","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","maxLength","maxLengthCreator","Wall","ollPost","ollPostElement","p","posts","InputNewPostReduxForm","onSubmit","formData","addPost","InputNewPost","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","reduxForm","form","Profile","ProfileClass","this","match","params","userId","authUserId","history","push","getUserProfileTC","getStatusTC","isAuth","updateStatusTC","to","Component","mapStateToProps","profilePage","newPostText","authReducer","objectAC","setUserProfile","getUserProfileThunk","compose","connect","withRouter","withAuthRedirect","AuthRedirectComponent","WithUrlData","Header","hm","header","loginBlock","onClick","SET_USER_DATA","messages","setAuthUserData","payload","authMeThunk","HeaderContainer","LoginReduxForm","error","Input","styles","formOllError","length","stopSubmit","_error","SET_INITIALIZED","initialized","appReducer","navFriends","nameFriend","navReducer","reducers","combineReducers","messagesPage","navPage","usersPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","NavFriends","nfm","navfriends","Nav","treeFr","f","nm","nav","activeClassName","active","ollfrainds","NavContainer","withSuspense","Suspense","fallback","UsersContainer","lazy","DialogsContainer","App","initializeApp","path","render","ProfileContainer","AppContainer","MainApp","ReactDOM","document","getElementById","preloader","input","meta","hasError","touched","formControl","withAuthR","RedirectComponent"],"mappings":"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","file":"static/js/main.f0299a0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2CjPX\",\"item\":\"Nav_item__3LJNy\",\"active\":\"Nav_active__1ce_W\",\"ollfrainds\":\"Nav_ollfrainds__3r9ja\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\n//Инициализация данных по умолчанию пока небыли переданный другие данные\r\nlet initialState = {\r\n        dialogsArray: [\r\n            {if: 1, name: 'Dmitry'},\r\n            {if: 2, name: 'Viktor'},\r\n            {if: 3, name: 'Nikola'},\r\n            {if: 4, name: 'Stanislav'},\r\n            {if: 5, name: 'Kirill'},\r\n            {if: 6, name: 'Aleksii'},\r\n            {if: 7, name: 'Leha'}],\r\n\r\n        messagesArray: [\r\n            {id: 1, message: 'Hello Pes'},\r\n            {id: 2, message: 'How Are you'},\r\n            {id: 3, message: 'I am bad'},\r\n            {id: 4, message: 'Yo'},\r\n            {id: 5, message: 'Yo'}]\r\n};\r\n\r\n//Reducer для диалогов, принимает:\r\n//state - только для себя (messagesPage) и\r\n//action - набор всех возможных команд\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    let stateCopy ;\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.textMessageNew;\r\n            stateCopy = {...state,\r\n                messagesArray: [...state.messagesArray, {id: 6, message: body}],\r\n            };\r\n            // stateCopy.messagesArray.push({id: 6, message: body});\r\n            // stateCopy.newMessageBody = '';\r\n            return stateCopy;\r\n\r\n            // stateCopy.newMessageBody = action.textMessageNew;\r\n            // return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Если Reducer-е есть нужная команда из action\r\n// она выполнится и вернет свой state для изменения\r\n// Если команд не обнаружено, вохвращается state без изменения\r\n\r\n// создание элементов action для каждой команды\r\nexport let sendMessageCreator = (text) => ({type: SEND_MESSAGE, textMessageNew: text});\r\n\r\nexport default dialogsReducer;","export const updateObjInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n    if (u[objPropName] === itemId)\r\n        return {...u, ...newObjProps};\r\n    return u\r\n})};\r\n","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../basket/utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UN_FOLLOW = 'UN-FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_IS_SVG = 'TOGGLE-IS-SVG';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE-IS-FOLLOWING';\r\n\r\n//Инициализация данных по умолчанию пока не были переданный другие данные\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: []\r\n\r\n};\r\n\r\n//Reducer для диалогов, принимает:\r\n//state - только для себя (profilePage) и\r\n//action - набор всех возможных команд\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.userID, \"id\", {followed: true})\r\n\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.userID, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalCount: action.totalCount };\r\n        case TOGGLE_IS_SVG:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {...state,\r\n                 followingProgress: action.isFetching\r\n                     ? [...state.followingProgress, action.userID]\r\n                     : state.followingProgress.filter(id=> id!= action.userID)};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// Если Reducer-е есть нужная команда из action\r\n// она выполнится и вернет свой state для изменения\r\n// Если команд не обнаружено, вохвращается state без изменения\r\n\r\n// создание элементов action для каждой команды\r\nexport let followAC = (userID) => ({type: FOLLOW, userID});\r\nexport let unfollowAC = (userID) => ({type: UN_FOLLOW, userID});\r\nexport let setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport let setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport let setTotalCountAC = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport let toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_SVG, isFetching});\r\nexport let toggleIsFollowingAC = (isFollPr, userID) => ({type: TOGGLE_IS_FOLLOWING, isFollPr, userID});\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize, isCurentPage) => {\r\n    //thunk санка, которая возвращает users\r\n    return  async (dispatch) => {\r\n        // Вызов preloader (изображение загрузки при слабои инете)\r\n        dispatch(toggleIsFetchingAC(true));\r\n\r\n        if (isCurentPage === true)\r\n            dispatch(setCurrentPageAC(currentPage));\r\n\r\n        // axion запросы с json данных\r\n        // alert(\"New object\"); отрабатывет один раз\r\n        // get запрос находится в api в getUsers\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(setUsersAC(data.items));\r\n        dispatch(setTotalCountAC(data.totalCount));\r\n\r\n        dispatch(toggleIsFetchingAC(false));\r\n\r\n    };\r\n};\r\n\r\n\r\n//  Одинаковый код двух санок вынесли в одну функцию (рефакторинг)\r\n// Дублирующаяся Логика\r\nconst followUnFlow = async (dispatch, userID, apiMethod, actionCreater) => {\r\n    dispatch(toggleIsFollowingAC(true, userID));\r\n    let data = await apiMethod(userID);\r\n    if (data.resultCode === 0)\r\n        dispatch(actionCreater(userID));\r\n    dispatch(toggleIsFollowingAC(false, userID));\r\n\r\n}\r\n\r\n// Санка отписки\r\nexport const unFollowThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.userDeleteFollow.bind(userID);\r\n        let actionCreater = unfollowAC;\r\n\r\n        followUnFlow(dispatch, userID, apiMethod, actionCreater);\r\n\r\n        // dispatch(toggleIsFollowingAC(true, userID));\r\n        // let data = await apiMethod(userID);\r\n        // if (data.resultCode === 0)\r\n        //     dispatch(actionCreater(userID));\r\n        // dispatch(toggleIsFollowingAC(false, userID));\r\n    };\r\n};\r\n\r\n\r\n// Санка подписки\r\n//  Одинаковый код двух санок вынесли в одну функцию (рефакторинг)\r\nexport const followThunkCreator = (userID) => {\r\n    return async (dispatch) => followUnFlow(dispatch, userID, usersAPI.userPostFollow.bind(userID), followAC);\r\n};\r\n\r\n\r\n// Санка подписки\r\n// export const followThunkCreator = (userID)=> (dispatch) => {\r\n//         dispatch(toggleIsFollowingAC(true, userID));\r\n//         usersAPI.userPostFollow(userID)\r\n//             .then(data => {\r\n//                 if (data.resultCode === 0)\r\n//                     dispatch(followAC(userID));\r\n//                 dispatch(toggleIsFollowingAC(false, userID));\r\n//             });\r\n//\r\n// };\r\n\r\n\r\nexport default usersReducer","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"4558af43-6a15-453e-98d3-2645a1eab72c\"},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\n// axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,\r\n//     {withCredentials: true,\r\n//         headers: {\"API-KEY\": \"4558af43-6a15-453e-98d3-2645a1eab72c\"}})\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users/?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {return response.data;})\r\n    },\r\n    userPostFollow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {return response.data})\r\n    },\r\n\r\n    userDeleteFollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {return response.data})\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userID){\r\n        return instance.get(`profile/` + userID)\r\n            .then(response => {return response.data})\r\n    },\r\n    getStatus(userID){\r\n        return instance.get(`profile/status/` + userID)\r\n            .then(response => {return response.data})\r\n    },\r\n    updateStatus(status1){\r\n        return instance.put(`profile/status`, {status: status1})\r\n    }\r\n};\r\n\r\nexport const headerAPI = {\r\n    authMe(){\r\n        return instance.get(`auth/me`)\r\n            .then(response => {return response.data})\r\n    }\r\n};\r\n\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {return response.data})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {return response.data})\r\n\r\n    }\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {profileAPI} from \"../../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS= 'SET-USER-STATUS';\r\n\r\n//Инициализация данных по умолчанию пока небыли переданный другие данные\r\nlet initialState = {\r\n        postArray: [\r\n            {id: 1, post: 'Hello Pes', likes: 234},\r\n            {id: 2, post: 'This is first React project', likes: 1},\r\n            {id: 3, post: 'I am lus', likes: 941},\r\n            {id: 4, post: 'This is bad idea', likes: 6},\r\n            {id: 5, post: 'I know((', likes: 23},\r\n            {id: 6, post: 'oh no', likes: 1}],\r\n        profile: null,\r\n        status: ''\r\n    };\r\n\r\n//Reducer для диалогов, принимает:\r\n//state - только для себя (profilePage) и\r\n//action - набор всех возможных команд\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 7,\r\n                post: action.textPostNew,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postArray: [...state.postArray, newPost]};\r\n        case SET_USER_PROFILE: return {...state, profile: action.profile};\r\n        case SET_USER_STATUS: return {...state ,status:  action.status};\r\n\r\n\r\n        default:  return state;\r\n    }\r\n};\r\n// Если Reducer-е есть нужная команда из action\r\n// она выполнится и вернет свой state для изменения\r\n// Если команд не обнаружено, вохвращается state без изменения\r\n\r\n// создание элементов action для каждой команды\r\nexport let addPostActionCreator = (text) => ({type: ADD_POST, textPostNew: text});\r\nexport let setUserProfileAC = (profile) => {return {type: SET_USER_PROFILE, profile}};\r\n\r\n// export const updateStatusThunkCreator = (status) =>  (dispatch) => {\r\n//         profileAPI.updateStatus(status).then(data => {\r\n//             if(data.resultCode ===0)\r\n//                 dispatch(setStatus(status))\r\n//         });\r\n// };\r\n\r\n\r\n// async - перевод в асинхронную функцию\r\n// await - замена .then ов более приветствуется\r\nexport const getUserProfileThunkCreater = (userID) => {\r\n    const getUserProfileThunk = async (dispatch) => {\r\n        let data = await profileAPI.getUserProfile(userID);\r\n        dispatch(setUserProfileAC(data));};\r\n    return getUserProfileThunk\r\n};\r\n\r\nexport let setStatus = (status) => {\r\n    return {type: SET_USER_STATUS, status}\r\n};\r\n\r\nexport const getStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\n\r\nexport const updateStatusThunkCreator = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) dispatch(setStatus(status));\r\n};\r\n\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport pm from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={pm.item}>\r\n            <img className={pm.img} src='https://img4.goodfon.ru/original/960x800/1/51/lili-reinkhart-lili-reinhart-pevitsa-aktrisa-shatenka-fon-po.jpg' />\r\n            {props.message}\r\n            <div><span>Like {props.like}</span></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","export default __webpack_public_path__ + \"static/media/ford.mustamg69.b96f743a.jpg\";","import React, {useEffect, useState} from 'react'\r\n\r\nconst  UserStatusHook = (props) =>{\r\n    // useState - локальный state, возвращает массив\r\n    // array[0] - значение (данные)\r\n    // array[1] - функция которая их меняет\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // переотрисовка (синхронизация состояния) когда изменятся данные в redux-store\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode =()=>{setEditMode(true)};\r\n\r\n    const deactivateEditMode =()=>{\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onStatusChange = (e) =>{setStatus(e.currentTarget.value);};\r\n\r\n\r\n\r\n    return <div>\r\n            {!editMode\r\n                ?<div>\r\n                <span onDoubleClick={activateEditMode}>\r\n                    {status || \"__________\"}</span>\r\n                </div>\r\n                :<div>\r\n                    <input  onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            autoFocus={true}\r\n                            value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n};\r\n\r\nexport default UserStatusHook","import React from 'react'\r\nimport fordMustang from '../../../assets/photo/ford.mustamg69.jpg'\r\nimport Preloader from \"../../../basket/Preloader/Preloader\";\r\nimport uim from './user.info.module.css'\r\nimport UserStatusHook from \"./UserStatusHook\";\r\n\r\n// Класовая компанента Profile\r\nconst UserInformation = React.memo((props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else\r\n        return (\r\n            <div className={uim.userItem}>\r\n                <div className={uim.userImage}>\r\n                    {props.profile.photos.large === null\r\n                        ? <div className={uim.logoMustang}><img src={fordMustang}/></div>\r\n                        : <div className={uim.logoUser}><img src={props.profile.photos.large}/></div>}\r\n                </div>\r\n\r\n                <div className={uim.userText}>\r\n                    <h3>{props.profile.fullName}</h3>\r\n\r\n                    <UserStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                    <br/>\r\n                    <table>\r\n                        {props.profile.contacts.facebook ? <tr>\r\n                            <td>facebook:</td>\r\n                            <tr> {props.profile.contacts.facebook}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.website ? <tr>\r\n                            <td>website:</td>\r\n                            <tr> {props.profile.contacts.website}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.vk ? <tr>\r\n                            <td>vk:</td>\r\n                            <tr> {props.profile.contacts.vk}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.twitter ? <tr>\r\n                            <td>twitter:</td>\r\n                            <tr> {props.profile.contacts.twitter}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.instagram ? <tr>\r\n                            <td>instagram:</td>\r\n                            <tr> {props.profile.contacts.instagram}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.youtube ? <tr>\r\n                            <td>youtube:</td>\r\n                            <tr> {props.profile.contacts.youtube}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.github ? <tr>\r\n                            <td>github:</td>\r\n                            <tr> {props.profile.contacts.github}</tr>\r\n                        </tr> : ''}\r\n                        {props.profile.contacts.mainLink ? <tr>\r\n                            <td>mainLink:</td>\r\n                            <tr> {props.profile.contacts.mainLink}</tr>\r\n                        </tr> : ''}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n});\r\n\r\nexport default UserInformation","import React from 'react'\r\nimport pm from \"../Profile.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Post from \"../Post/Post\";\r\nimport {maxLengthCreator, requiredField} from \"../../../basket/validators/validators\";\r\nimport {Textarea} from \"../../../basket/FormsControls/FormsControls\";\r\n\r\nlet maxLength =  maxLengthCreator(10);\r\n\r\nconst Wall = React.memo( (props)=>{\r\n    const onSubmit = (formData) =>{props.addPost(formData.posts);};\r\n    let ollPost = props.ollPostElement.map(p => <Post message={p.post} like={p.likes} key={p.id}/>);\r\n\r\n    return (\r\n    <div>\r\n        <div className={pm.posts}>\r\n            <h3>My Post</h3>\r\n            <InputNewPostReduxForm onSubmit={onSubmit}/>\r\n            {ollPost}\r\n        </div>\r\n    </div>)\r\n});\r\n\r\n\r\n\r\nconst InputNewPost = React.memo((props) => {\r\n    return  <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field  placeholder={\"Post\"} name={\"posts\"} component={Textarea} validate={[requiredField, maxLength]} />\r\n        </div>\r\n        <button>\r\n            Send Post\r\n        </button>\r\n    </form>\r\n});\r\n\r\nconst InputNewPostReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'posts'\r\n})(InputNewPost);\r\n\r\n\r\nexport default Wall;","import React from 'react'\r\nimport pm from './Profile.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport fordMustang from '../../assets/photo/ford.mustamg69.jpg'\r\nimport Preloader from \"../../basket/Preloader/Preloader\";\r\nimport UserInformation from \"./UserInformation/UserInformation\";\r\nimport Wall from \"./Wall/Wall\";\r\n\r\nconst Profile = React.memo(({profile, status, updateStatus, ollPostElement, addPost }) => {\r\n    if(!profile ){\r\n        return <Preloader/>\r\n    } else\r\n    return(\r\n        <div className={pm.item}>\r\n            <UserInformation profile={profile}\r\n                             status ={status}\r\n                             updateStatus={updateStatus}\r\n            />\r\n\r\n            <Wall ollPostElement={ollPostElement}\r\n                  profile={profile}\r\n                  addPost={addPost}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n// Презентационная (функциональная) компонента Profile\r\nconst ProfileFunction = (props) => {\r\n    let ollPostElement = props.ollPost.postArray.map(p => <Post message={p.post} like={p.likes} key ={p.id}/>);\r\n    let newPostElement = props.newPostText;\r\n\r\n    let onAddPost = ()=> {\r\n        // props.dispatch(addPostActionCreator());\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = (e) => {\r\n        let text = e.target.value;\r\n        // props.dispatch (updateNewTextPostActionCreator(text));\r\n        props.upTxtP(text);\r\n    };\r\n\r\n    return (\r\n        <div className={pm.item}>\r\n            <div className={pm.logoImage}>\r\n                <img src={fordMustang}/>\r\n            </div>\r\n            <div>\r\n                ProfileInfo\r\n            </div>\r\n            <div className={pm.posts}>\r\n                <h3>My Post</h3>\r\n                <div className={pm.addPost}>\r\n                    <div>\r\n                        <textarea value={newPostElement} onChange={onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onAddPost}>Add Post</button>\r\n                    </div>\r\n                </div>\r\n                {ollPostElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Profile\r\n// export default ProfileFunction","import React from 'react'\r\nimport {\r\n    addPostActionCreator,\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreater,\r\n    setUserProfileAC,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport ProfileAPI from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileClass extends React.Component {\r\n    componentDidMount() {\r\n        // Получение id выбраного пользователся\r\n        let userID = this.props.match.params.userId;\r\n        // если его нет, переходим на свой профиль\r\n        if (!userID){\r\n            userID= this.props.authUserId;\r\n            if(!userID)\r\n                this.props.history.push(\"/login\");\r\n        }\r\n\r\n\r\n        this.props.getUserProfileTC(userID);\r\n        this.props.getStatusTC(userID);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth)\r\n            return <Redirect to={'/login'}/>;\r\n        return(<ProfileAPI {...this.props}\r\n                           ollPostElement={this.props.ollPost.postArray}\r\n                           addPost={this.props.addPost}\r\n\r\n                           profile={this.props.profile}\r\n                           status ={this.props.status}\r\n                           updateStatus = {this.props.updateStatusTC}\r\n\r\n        />)\r\n    }\r\n};\r\n\r\n\r\n// Функция которая передает данные\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        ollPost: state.profilePage,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.authReducer.userId,\r\n        isAuth: state.authReducer.isAuth\r\n\r\n    }\r\n};\r\n\r\n// функция которая передает объект \"функции\" для выполнения в Redux\r\n// обект actionCreater для упрощенной схемы передачи их redux\r\n// redux сам собирает объект как mapDispatchToProps\r\n// если  назвать функции в reducer и container можно еще упростить код\r\nlet objectAC = {\r\n    addPost: addPostActionCreator,\r\n    setUserProfile: setUserProfileAC,\r\n    getUserProfileTC: getUserProfileThunkCreater,\r\n    getStatusTC: getStatusThunkCreator,\r\n    updateStatusTC: updateStatusThunkCreator\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,objectAC),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileClass);\r\n// compose заменяет все то, что написано ниже\r\n// Выполнение от последнего к первому\r\n\r\n// HOC хок для проверки подкиски\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileClass);\r\n\r\n// делает запрос на сервак, для получения данных по URL\r\nlet WithUrlData =  withRouter(AuthRedirectComponent);\r\n\r\n//Контенерная компонента который получает данные и передает их компонете Profile\r\nconst ProfileContainer = connect(mapStateToProps,objectAC)(WithUrlData);\r\n\r\n// export default ProfileContainer;","export default __webpack_public_path__ + \"static/media/user1.ab7efdc7.png\";","import React from 'react'\r\nimport hm from '../../Style/Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userImage from '../../assets/photo/user1.png'\r\n\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className={hm.header}>\r\n            <img src={userImage}/>\r\n            <div className={hm.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.email} - <button onClick={props.logout}>Log Out</button></div>\r\n                    : <NavLink to={'/login'}>Log In</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header","import {headerAPI, loginAPI} from \"../../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n//Инициализация данных по умолчанию пока небыли переданный другие данные\r\nlet initialState = {\r\n    resultCode: 0,\r\n    messages: [],\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    password: null,\r\n    isAuth: false\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport let setAuthUserData = (userId, email, login, isAuth) => (\r\n    {type: SET_USER_DATA, payload:{userId, email, login, isAuth}});\r\n\r\nexport const authMeThunk = () => async (dispatch) => {\r\n    let data = await headerAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await loginAPI.login(email, password, rememberMe);\r\n    if (data.resultCode === 0)\r\n        dispatch(authMeThunk());\r\n    else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \" Some Error \";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = ()=> async (dispatch) => {\r\n    let data = await loginAPI.logout();\r\n            if(data.resultCode ===0 )\r\n                dispatch(setAuthUserData( null, null, null, false ));\r\n};\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/reducers/auth-reducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {return <Header {...this.props} />}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    login: state.authReducer.login,\r\n    email: state.authReducer.email\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {  logout} )(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../basket/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../basket/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/reducers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../basket/FormsControls/FormsControls.module.css'\r\n\r\n\r\n\r\nconst LoginForm = (handleSubmit,error) =>{\r\n    return  <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"Email\"} name={\"email\"} validate={[requiredField]} component={Input}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}  validate={[requiredField]} component={Input}/>\r\n        </div>\r\n        <div>\r\n            <Field type={\"checkbox\"} name={\"rememberMe\"}  component={Input}/> remember me\r\n        </div>\r\n\r\n        {error && <div className={styles.formOllError}> {error} </div>}\r\n        <div>\r\n            <button>\r\n                Login\r\n            </button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\n//\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    // Компонта LoginReduxForm сама соберет данные из form в (LoginForm)\r\n    // и положит их в обект formData\r\n    const onSubmit = (formData) =>{\r\n        // login сдесь callback\r\n        // mylik.dima@gmail.com\r\n        //L360b04V26f7\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    // место для отправления на state\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst  mapStateToProps = (state) => {\r\n    return {isAuth: state.authReducer.isAuth}\r\n};\r\n\r\n// login сдесь ThunkCreater\r\nexport default connect(mapStateToProps,{login})( Login)","import {authMeThunk} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED';\r\n\r\n//Инициализация данных по умолчанию пока небыли переданный другие данные\r\nlet initialState = {\r\n    initialized: false\r\n\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport let initializedTrue = () => (\r\n    {type: SET_INITIALIZED });\r\n\r\nexport const initializeApp = ()=>(dispatch) => {\r\n    let promise = dispatch(authMeThunk());\r\n    promise.then(()=> {\r\n        dispatch(initializedTrue());})\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default appReducer","//Инициализация данных по умолчанию пока небыли переданный другие данные\r\nlet initialState = {\r\n        navFriends: [\r\n            {nameFriend: 'Elsa'},\r\n            {nameFriend: 'Emma'},\r\n            {nameFriend: 'Emilia'}]\r\n    };\r\n\r\n//Reducer для диалогов, принимает:\r\n//state - только для себя (navPage) и\r\n//action - набор всех возможных команд\r\nconst navReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\n// Если Reducer-е есть нужная команда из action\r\n// она выполнится и вернет свой state для изменения\r\n// Если команд не обнаружено, вохвращается state без изменения\r\n\r\n\r\nexport default navReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport navReducer from \"./reducers/nav-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\n// Redux вызов reducers(редьюсеров) файлов\r\n// название : вызов reducer\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    navPage: navReducer,\r\n    usersPage: usersReducer,\r\n    authReducer: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\n// Для Расширения\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//игициалихация store с использование Redux\r\n//getState, subscribe,  dispatch(action) вызываются сами\r\n//объявлять их не нужно\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n// window.store = store;\r\n\r\nexport default store;","import nm from \"../../../Style/Nav.module.css\";\r\nimport nfm from \"./nav.friends.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst NavFriends =(props)=>{\r\n    let EizaGonsalrzURL = 'https://img5.goodfon.ru/original/960x800/b/84/eiza-gonzalez-devushka-vzgliad-figura-krasotka-poza-aktrisa.jpg';\r\n    return (\r\n        <div className={nfm.navfriends}>\r\n            <div><img className={nfm.img} src={EizaGonsalrzURL}/></div>\r\n            <div className={nfm.nameFriend} ><h4>{props.name}</h4></div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default NavFriends","import React from 'react';\r\nimport nm from '../../Style/Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport NavFriends from \"./navFriends/NavFriends\";\r\n\r\nconst Nav = (props) => {\r\n    let treeFr = props.navPage.navFriends.map(f => <NavFriends name={f.nameFriend} key ={f.id}/>);\r\n\r\n    return (\r\n        <nav className={nm.nav}>\r\n            <div>\r\n                <div className={nm.item}><NavLink to=\"/profile\" activeClassName={nm.active}>Profile</NavLink></div>\r\n                <div className={nm.item}><NavLink to=\"/dialogs\" activeClassName={nm.active}>Message</NavLink></div>\r\n                <div className={nm.item}><NavLink to=\"/users\" activeClassName={nm.active}>Friends</NavLink></div>\r\n                <div className={nm.item}><NavLink to=\"/news\" activeClassName={nm.active}>News </NavLink></div>\r\n                <div className={nm.item}><NavLink to=\"/music\" activeClassName={nm.active}>Music </NavLink></div>\r\n                <div className={nm.item}> <br></br></div>\r\n                <div className={nm.item}><NavLink to=\"/settings\" activeClassName={nm.active}>Settings </NavLink></div>\r\n            </div>\r\n            <div>\r\n                <h2>Friends</h2>\r\n                <div className={nm.ollfrainds}>\r\n                    {treeFr}\r\n                </div>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default Nav","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        navPage: state.navPage\r\n    }\r\n};\r\n\r\n// let mapDispatchToProps = ()=>{return {}};\r\n\r\nconst NavContainer = connect(mapStateToProps)(Nav);\r\n\r\nexport default NavContainer","import  React from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) =>{\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n             <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n};\r\n","import './App.css';\nimport React, {Component} from \"react\";\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./Components/content/ProfileContainer\";\nimport HeaderContainer from \"./Components/header/HeaderContainer\";\nimport Login from \"./Components/login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./basket/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport NavContainer from \"./Components/nav/NavContainer\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n// import NavContainer from \"./Components/nav/NavContainer\";\n// Пока вызова не будет загружаться эта страница не будет\n// <React.Suspense> - необходим для временного пропуска данной загрузки\n// позволяет не загружать редко используеммые страницы\nconst UsersContainer = React.lazy(()=> import(\"./Components/users/UsersContainer\"));\nconst DialogsContainer = React.lazy(()=> import(\"./Components/dialogs/DialogsContainer\"));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized)\n            return <Preloader/>\n        else\n            return (<div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <NavContainer/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/users' render= {withSuspense(UsersContainer)}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    </div>\n                </div>\n            )\n    }\n}\n\nconst mapStateToProps = (state) => {return {initialized: state.app.initialized}};\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp} ))\n(App);\n\nconst MainApp = (props) => {\n    return <Provider store={store}>\n        <HashRouter >\n            <AppContainer/>\n        </HashRouter>\n    </Provider>\n};\n\nexport default MainApp\n\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./App\";\n\n\n// let h1 = document.createElement(\"h1\");\n// h1.innerHTML = \"New Element Virtual DOM\";\n// document.querySelector('body').appendChild(h1);\n\nReactDOM.render(<MainApp/>,document.getElementById('root'));\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__GtM9c\",\"posts\":\"Profile_posts__1uDdm\",\"logoImage\":\"Profile_logoImage__VVa4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2wock\",\"error\":\"FormsControls_error__1z7pI\",\"formOllError\":\"FormsControls_formOllError__1NFaI\"};","export default __webpack_public_path__ + \"static/media/spinning-circles.6f19c51c.svg\";","import preloader from \"../../assets/svg/spinning-circles.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () =>{\r\n    return <div><img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","export const requiredField = value => {\r\n    if(value)\r\n        return undefined;\r\n    else\r\n        return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength )\r\n        return \"Max length is \" + maxLength + \" symbols\";\r\n    else\r\n        return undefined;\r\n};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n// ({input, meta, ...props}) - деструкторизация props,\r\n// что бы не все передовать textarea - rest оператор\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    // props будет содержать все кромк input и meta\r\n\r\n    const hasError =  meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: + \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            { hasError && <div ><span>{meta.error}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    // props будет содержать все кромк input и meta\r\n    const hasError =  meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: + \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            { hasError && <div ><span>{meta.error}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"user_info_userItem__jlin3\",\"userImage\":\"user_info_userImage__iX8O_\",\"logoMustang\":\"user_info_logoMustang__RmvM6\",\"userText\":\"user_info_userText__3TrcM\",\"logoUser\":\"user_info_logoUser__1H1K2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navfriends\":\"nav_friends_navfriends__1RuUq\",\"nameFriend\":\"nav_friends_nameFriend__nZjdW\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// для отдельной передачи данных о авторизации\r\nlet withAuthR = (state) => {\r\n    return{isAuth: state.authReducer.isAuth}};\r\n\r\n// HOC для проверки авторизации\r\n// При положительном результат вернет пришедшую component\r\n// При отрицательном, произойдет переброс на login (Redirect)\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    // Второй оборот компоненты для конекта со store (двойной оборот)\r\n    let ConnectRedirectComponent = connect(withAuthR)(RedirectComponent);\r\n\r\n    return  ConnectRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2l54-\",\"img\":\"Post_img__3l2u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2DCwJ\",\"loginBlock\":\"Header_loginBlock__3bQBv\"};"],"sourceRoot":""}